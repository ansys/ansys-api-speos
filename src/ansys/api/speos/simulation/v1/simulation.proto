// (c) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.
syntax = "proto3";

import "ansys/api/speos/simulation/v1/sensor_properties.proto";

package ansys.api.speos.simulation.v1;

service SimulationsManager {
	// Create a Simulation
	rpc Create(Create_Request) returns (Create_Response) {}
	// Read a Simulation
	rpc Read(Read_Request) returns (Read_Response) {}
	// Update a Simulation
	rpc Update(Update_Request) returns (Update_Response) {}
	// Delete a Simulation
	rpc Delete(Delete_Request) returns (Delete_Response) {}
	// List all Simulations in manager
	rpc List(List_Request) returns (List_Response) {}
}

// Complete sensor information : its name, template via guid, and properties (position, layer separation, ...)
message Sensor {
	string name = 1; // Sensor name
	string guid = 2; // SensorTemplate guid in SensorTemplates Manager
	string result_file_name = 3; // Result file name without extention. Result files of the sensor will be based on this name.
	oneof properties {
		CameraSensorProperties camera_sensor_properties = 4;
		IrradianceSensorProperties irradiance_sensor_properties = 5;
	}
}

// Simulation definition
message Simulation {
	string name = 2; // Simulation name
	string guid = 3; // SimulationTemplate guid in SimulationTemplates Manager
	repeated Sensor sensors = 1; // Sensors present in the simulation
}

// Request to create a Simulation in SimulationsManager
message Create_Request {}
message Create_Response {
	string guid = 1; // Guid of the Simulation created in SimulationsManager
}
// Request to read a Simulation in SimulationsManager
message Read_Request {
	string guid = 1; // Guid of the Simulation to be read
}
message Read_Response {
	Simulation simulation = 1; // Simulation corresponding to the guid given in Read_Request
}
// Request to update a Simulation in SimulationsManager
message Update_Request {
	string guid = 1; // Guid of the Simulation to be updated
	Simulation simulation = 2; // Simulation that will be used for the update
}
message Update_Response {
}
// Request to delete a Simulation in SimulationsManager
message Delete_Request {
	string guid = 1; // Guid of the Simulation to be deleted
}
message Delete_Response {}

message List_Request {}
message List_Response {
	repeated string guids = 1; // Guids of the Simulations in SimulationsManager
}


// Service to handle a simulation
service SpeosSimulation {
	// Load a speos file into a simulation
	rpc Load(Load_Request) returns (Load_Response) {}
	// Save a simulation
	rpc Save(Save_Request) returns (Save_Response) {}
	// Get the name of a simulation
	rpc GetName(GetName_Request) returns (GetName_Response) {}
}

message Load_Request {
	string guid = 1; // Guid of the Simulation in SimulationsManager
	string input_file_path = 2; // Path to the .speos file - or uri of .speos file uploaded to the server via FileTransferService.
}
message Load_Response {}

message Save_Request {
	string guid = 1; // Guid of the Simulation in SimulationsManager
	string input_folder_path = 2; // Path to the folder where the .speos file will be saved - or uri of a reserved file item on the server (using FileTransferService).
}
message Save_Response {}

message GetName_Request {
	string guid = 1; // Guid of the Simulation in SimulationsManager
}
message GetName_Response {
	string name = 1; // name of the Simulation corresponding to the guid given in GetName_Request
}

