// (c) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited. ANSYS Confidential Information
syntax = "proto3";

package ansys.api.speos.common.v1;

//////////////
// MESSAGES //
//////////////


enum DatasUnit {
	// Energetic units
	watts = 0; // W
	watts_per_square_meters = 1; // W/(m2)
	watts_per_steradians = 2; // W/(sr)
	watts_per_square_meters_steradians = 3; // W/(m2.sr)
	watts_per_steradians_nanometers = 4; // W/(sr.nm)
	watts_per_square_meters_nanometers = 5; // W/(m2.nm)

	joules_per_square_meters = 6; // J/(m2)
	joules_per_square_meters_nanometers = 7; // J/(m2.nm)

	luxes = 15; // lx
	luxes_seconds = 16; // lx.s
	luxes_per_nanometers = 17; // lx.s/(nm)
	luxes_seconds_per_nanometers = 18; // lx.s/(nm)

	candela = 28; // cd
	candela_per_square_meters = 29; // cd/(m2)
	candela_per_nanometers = 30; // cd/(m2)
	candela_per_squaremeters_nanometers = 31; // cd/(m2.nm)

	lumens = 45; // lm
	lumens_per_steradians = 46; // lm/(sr)
	lumens_per_square_meters_steradians = 47; // lm/(m2.sr)
	lumens_per_steradians_nanometers = 48; // lm/(sr.nm)
	lumens_per_square_meters_nanometers = 49; // lm/(m2.nm)
}

enum Magnitude {
	irradiance = 0;
	illuminance = 1;
	spectral_irradiance = 2;
	spectral_illuminance = 3;
	radiance = 4;
	luminance = 5;
	spectral_radiant = 6;
	spectral_luminance = 7;
	radiant_intensity = 8;
	luminous_intensity = 9;
	spectral_radiant_intensity = 10;
	spectral_luminous_intensity = 11;
	exposure = 12;
	luminous_exposure = 13;
	spectral_exposure = 14;
	spectral_luminous_exposure = 15;

	radiant_flux = 16;
	luminous_flux = 17;
	luminous_intensity_flux = 18;
}

// units serving as coordinates
enum CoordinatesUnit {
	// spacial units
	millimeters = 0; // mm
	meters = 1; // m
	radians = 2; // radians
	square_millimeters = 3; // mm2
	square_meter = 4; // m2
	reciprocal_meters = 5; // m-1
	reciprocal_square_meters = 6; // m-2
	steradians = 7; // sr
}

message datas {
	repeated double data_values = 1; // only doubles 
	repeated uint64 dimensions = 2; // size of dimensions = total number of dimension representation of the data, each value representing its dimension size
	Magnitude magnitude = 3;
	DatasUnit unit = 4;
	//CoordinatesUnit = 4;
}

message data {
	double value = 1; // only doubles ?
	Magnitude magnitude = 2;
	DatasUnit unit = 3;
}

