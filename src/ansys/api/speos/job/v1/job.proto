// (c) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.
syntax = "proto3";

import "ansys/api/speos/file/v1/file_transfer.proto";
import "ansys/api/speos/job/v1/simulation_properties.proto";
import "google/protobuf/duration.proto";

package ansys.api.speos.job.v1;

service SpeosJobsManager {
	// Create a Job
	rpc Create(Create_Request) returns (Create_Response) {}
	// Delete a Job
	rpc Delete(Delete_Request) returns (Delete_Response) {}
	// List all Jobs in manager
	rpc List(List_Request) returns (List_Response) {}
}

enum Job_Type {
	CPU = 0;
	GPU = 1;
}

message Job {
	string simu_guid = 1; // Guid of the Simulation in SimulationsManager
	Job_Type job_type = 2; // Type of the job : CPU, GPU, ...
	oneof simu_properties {
		DirectMCSimulationProperties direct_mc_simulation_properties = 3; // Properties to be filled for simulation based on DirectMCSimulationTemplate
		InverseMCSimulationProperties inverse_mc_simulation_properties = 4; // Properties to be filled for simulation based on InverseMCSimulationTemplate 
	}
}

// Request to create a Job in SpeosJobsManager
message Create_Request {
	string simu_guid = 1; // Deprecated - use instead job.simu_guid
	Job_Type job_type = 2; // Deprecated - use instead job.job_type
	Job job = 3; // Job characteristics
}
message Create_Response {
	string guid = 1; // Guid of the Job created in SpeosJobsManager
}
// Request to delete a Job in SpeosJobsManager
message Delete_Request {
	string guid = 1; // Guid of the Job to be deleted
}
message Delete_Response {}

message List_Request {}
message List_Response {
	repeated string guids = 1; // Guids of the Jobs in SpeosJobsManager
}


// Service to handle a job
service SpeosJob {
	// Get the state of a Job
	rpc GetState(GetState_Request) returns (GetState_Response) {}
	// Start a Job
	rpc Start(Start_Request) returns (Start_Response) {}
	// Stop a Job
	rpc Stop(Stop_Request) returns (Stop_Response) {}
	// Get error of a Job
	rpc GetError(GetError_Request) returns (GetError_Response) {}
	// Get the results of a Job
	rpc GetResults(GetResults_Request) returns (GetResults_Response) {}
	// Get information about a Job
	rpc GetInformation(GetInformation_Request) returns (GetInformation_Response) {}
}

enum Job_State {
	QUEUED = 0;
	RUNNING = 1;
	PAUSED = 2;
	STOPPED = 3;
	FINISHED = 4;
	IN_ERROR = 5;
}

message GetState_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message GetState_Response {
	Job_State state = 1;
}

message Start_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message Start_Response {}

message Stop_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message Stop_Response {}

message GetError_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message GetError_Response {
	string name = 1;
	string category = 2;
	int32 severity = 3;
	string request = 4;
	string diagnostic = 5;
	string advice = 6;
	string error_file = 7;
	int32 error_line = 8;
}

message Result {
	oneof result {
		string path = 1; // result path on the server
		ansys.api.speos.file.v1.Upload_Response upload_response = 2; // result uploaded to server's file system (via FileTransferService) -> returns Upload_Response
	}
}
message GetResults_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message GetResults_Response {
	repeated Result results = 1; // list of the Job results
}

message GetInformation_Request {
	string guid = 1; // Guid of the Job in SpeosJobsManager.
}
message GetInformation_Response {
	string title = 1;
	string name = 2;
	string infos = 3;
	double progress = 4; // value between 0.0 and 1.0
	google.protobuf.Duration elapsed_time = 5;
	google.protobuf.Duration remaining_time = 6;
}